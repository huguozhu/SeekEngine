//STAGE:cs
#include "ParticleCommon.dsh"
RWStructuredBuffer<Particle> particle_datas;
RWStructuredBuffer<ParticleDrawArgs> draw_args;
RWStructuredBuffer<DispatchArgs> simulate_dispatch_args;
RWStructuredBuffer<DispatchArgs> emit_dispatch_args;

cbuffer CTickBeginParam
{
	uint emit_count;
};

[numthreads(1, 1, 1)]
void main(uint3 DTid : SV_DispatchThreadID)
{
	particle_counters[0].emit_count = min(emit_count, particle_counters[0].dead_count);
	particle_counters[0].simulate_count = particle_counters[0].alive_count[pre_sim_index] + particle_counters[0].emit_count;
	particle_counters[0].render_count = 0;
	particle_counters[0].alive_count[post_sim_index] = 0;

	draw_args[0].count = 6;
	draw_args[0].instance_count = 0;
	draw_args[0].first = 0;
	draw_args[0].base_instance = 0;

	emit_dispatch_args[0].dispatch_num_x = uint(ceil(float(particle_counters[0].emit_count) / float(PARTICLE_CS_X_SIZE)));
	emit_dispatch_args[0].dispatch_num_y = 1;
	emit_dispatch_args[0].dispatch_num_z = 1;

	simulate_dispatch_args[0].dispatch_num_x = uint(ceil(float(particle_counters[0].simulate_count) / float(PARTICLE_CS_X_SIZE)));
	simulate_dispatch_args[0].dispatch_num_y = 1;
	simulate_dispatch_args[0].dispatch_num_z = 1;
}