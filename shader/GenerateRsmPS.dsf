//PREDEFINE:HAS_MATERIAL_NORMAL=0,1
//STAGE:ps

#include "Common.dsh"
#include "Lighting.dsh"
cbuffer materialInfo
{
    MaterialInfo materialInfo;
}

cbuffer lightInfo
{
	LightInfo lightInfo;
}

Texture2D normalTex;
Texture2D albedoTex;

void main(
	in float2 texCoord	: TEXCOORD,
	in float3 normal	: NORMAL,
#if HAS_MATERIAL_NORMAL
    in float4 tangent	: TANGENT,
#endif
    in float3 posWorld	: POSITION,
		
	out float4 rsm0		: SV_Target0,	// normal
	out float4 rsm1		: SV_Target1,	// world_position
	out float4 rsm2		: SV_Target2)	// flux
{
	float3 normal_world = normalize(normal);

#if HAS_MATERIAL_NORMAL == 1
    if (materialInfo.hasBasicTex.y)
    {
		float3 pixelNormal = normalTex.Sample(linear_sampler, texCoord).rgb;
        pixelNormal = pixelNormal * 2.0 - 1.0;
		
        float3 T = normalize(tangent.xyz);
		float3 N = normalize(normal_world);
		T = normalize(T - dot(T, N) * N);
		float3 B = cross(N, T) * tangent.w;
		
        float3x3 TBN = float3x3(T, B, N);
        normal_world = mul(pixelNormal, TBN);
    }
#endif
	rsm0 = float4(BestFitNormal_Encode(normalize(normal_world)), 1.0);
	rsm1 = float4(posWorld, 1.0);

	float3 albedo = materialInfo.albedoFactor.xyz;
    if (materialInfo.hasBasicTex.x)
		albedo *= albedoTex.Sample(linear_sampler, texCoord).rgb;
	float3 vpl_flux = albedo * lightInfo.color;
	rsm2 = float4(vpl_flux, 1.0);
}