//STAGE:vs
#include "Lighting.dsh"
#include "shared/GI.h"

Texture2D rsm_color0;
Texture2D rsm_color1;
Texture2D rsm_color2;

struct RSMTexel
{
    float3 rsm_normal;
    float3 rsm_position;
	float3 rsm_flux;
};

struct GSInput
{
	float4 cellPos 	: SV_POSITION;
	float3 normal 	: NORMAL;
	float3 flux 	: POSITION;
};

RSMTexel GetRSMTexel(uint2 coords)
{
    RSMTexel texel = (RSMTexel)0;
	
	float3 rsm0        = rsm_color0.Load(int3(coords, 0)).xyz;
    texel.rsm_normal   = normalize(BestFitNormal_Decode(rsm0));
	texel.rsm_position = rsm_color1.Load(int3(coords, 0)).xyz;
    texel.rsm_flux     = rsm_color2.Load(int3(coords, 0)).xyz;
    return texel;
}

GSInput main(uint vertex_id : SV_VertexID)
{
	GSInput output = (GSInput)0;

	uint2 RSMsize;
	rsm_color0.GetDimensions(RSMsize.x, RSMsize.y);
	uint2 rsmCoords = uint2(vertex_id % RSMsize.x, vertex_id / RSMsize.x);

	RSMTexel texel = GetRSMTexel(rsmCoords);

	float3 pos = texel.rsm_position;
	output.cellPos = float4(int3(pos * LPV_SCALE + float3(LPV_DIM_HALF, LPV_DIM_HALF, LPV_DIM_HALF) + 0.5f * texel.rsm_normal), 1.0f);
	output.normal = texel.rsm_normal;
	output.flux = texel.rsm_flux;
	return output;
}